
{{- $rname := include "metalback.fullname" . -}}
{{- $domain := .Values.ingress.domain -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ $rname }}-ingress
  annotations:
    cert-manager.io/cluster-issuer: issuer
    kubernetes.io/ingress.class: {{ .Values.ingress.class }}
    {{- if .Values.ingress.globalStaticIp }}
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.ingress.globalStaticIp }}
    {{- end }}
spec:
  {{- if .Values.ingress.tls }}
  tls:
  - hosts:
    - {{ .Values.ingress.domain }}
    {{ range $mname, $microservice := .Values.microservices -}}
    - {{ $mname }}.{{ $domain }}
    {{ end }}
    {{- if .Values.ingress.tls.production -}}
    secretName: tls-secret-production
    {{- else -}}
    secretName: tls-secret-staging
    {{- end -}}
  {{- end }}
  rules:
  {{- range $mname, $microservice := .Values.microservices }}
  - host: {{ $mname }}.{{ $domain }}
    http:
      paths:
      - backend:
          serviceName: {{ $mname }}
          servicePort: {{ $microservice.port }}
  {{- end }}

{{ if .Values.ingress.tls }}
---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: issuer
spec:
  acme:
    email: {{ .Values.ingress.tls.email }}
    {{- if .Values.ingress.tls.production }}
    server: https://acme-v02.api.letsencrypt.org/directory
    {{- else }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    {{ end }}
    privateKeySecretRef:
      {{- if .Values.ingress.tls.production }}
      name: tls-secret-production
      {{- else }}
      name: tls-secret-staging
      {{ end }}
    solvers:
    - http01:
        ingress:
          class: {{ .Values.ingress.class }}
{{ end }}
